package com.ucf.customer.service;

import com.ucf.customer.api.bo.MemberCommonResult;
import com.ucf.customer.api.enums.EnumsUserCardType;
import com.ucf.customer.bo.EnterpriseParamBO;
import com.ucf.customer.bo.RegisterParamBO;
import com.ucf.customer.bo.ResultBo;
import com.ucf.customer.pojo.UcfUser;

public interface UserInfoService {
	
	/**
	 * 实名认证
	 * @param userId
	 * @param realName
	 * @param certType
	 * @param certNo
	 * @param certSatus
	 * @return
	 */
	public ResultBo realName(final String userId,final String realName,final String certType,final String certNo,String certSatus);
	
	/**
	 * 创建用户子卡
	 * @param userId 用户ID
	 * @param cardType 子卡类型
	 * @return
	 */
	public ResultBo createSubCard(String userId,EnumsUserCardType cardType);	
	
	public boolean isUserPwdMatch(String userId, String pwd1,String pwd2);
	
	public void resetLgnPwd(String userId, byte [] pwd) throws Exception;
	
	public void resetPayPwd(String userId,  byte [] pwd) throws Exception;
	
	/**
	 * @Description: 核实登录密码
	 * @param userId
	 * @param lgnPwd
	 * @return ResultBo 返回类型
	 * @author gaoxiang
	 * @date 2014年9月23日 下午3:08:24
	 */
	public ResultBo checkLoginPwd(String userId,  byte []  lgnPwd);
	
	/**
	 * @Description: 核实支付密码
	 * @param userId
	 * @param payPwd
	 * @return ResultBo 返回类型
	 * @author gaoxiang
	 * @date 2014年9月23日 下午3:08:14
	 */
	public ResultBo checkPayPwd(String userId,  byte []  payPwd);

	/**
	 * @Description: 查询用户存在子卡
	 * @param userId
	 * @param fundCard
	 * @return ResultBo 返回类型
	 * @author gaoxiang
	 * @date 2014年9月24日 下午4:16:18
	 */
	public ResultBo isExistSubCard(String userId, EnumsUserCardType cardType);

	/**
	 * 基金注册用户
	 * @param registerBo
	 * @return
	 */
	public ResultBo register(final RegisterParamBO registerBo);
	
	/**
	 * 企业会员注册
	 * @param registerBo
	 * @return
	 */
	public ResultBo register(final EnterpriseParamBO registerBo);
	
	/**
	 * 注册个人托管用户
	 * @param memberBo
	 * @return
	 */
	public MemberCommonResult<String> registerManagedUser(RegisterParamBO memberBo);
	
	/**
	 * @Description: 第三方商户注册开户 判断是否已经注册过
	 * @param merchantId
	 * @param refUser
	 * @return UcfUser 返回类型
	 * @author gaoxiang
	 * @date 2015-1-7 下午3:07:20
	 */
	public UcfUser isExistsMerchantUser(String merchantId,String refUser);
}
