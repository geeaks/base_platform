package com.ucf.customer.service;

import java.util.List;
import java.util.Map;

import org.springframework.ui.Model;

import com.ucf.customer.pojo.UcfBankCard;
import com.ucf.customer.pojo.UcfCard;
import com.ucf.customer.pojo.UcfCustomer;
import com.ucf.customer.pojo.UcfOrg;
import com.ucf.customer.pojo.UcfPerson;
import com.ucf.customer.pojo.UcfQuestion;
import com.ucf.customer.pojo.UcfUser;
import com.ucf.customer.pojo.UcfUserLoginApp;
import com.ucf.customer.utils.enums.EnumAccountType;

public interface LoginService {

	/**
	 * 
	 * Description: 判断用户和密码是否匹配
	 * 
	 * @Version1.0 2014-3-18 下午5:01:06 by 李晓明（lixiaoming@ucfgroup.com）创建
	 * @param userId
	 * @param lgPwd
	 * @return
	 * @throws Exception
	 */
	public boolean isUserMatch(String userId, String lgPwd) throws Exception;
	
	public boolean isUserPayPwdMatch(String userId, String payPwd) throws Exception;
	
	public boolean isUserPwdMatch(String userId, String pwd1, String pwd2);

	/**
	 * 
	 * Description: 验证登录信息
	 * 
	 * @Version1.0 2014-4-9 上午11:34:01 by xuhao（xuhao@ucfgroup.com）创建
	 * @param loginId
	 * @return
	 * @throws Exception
	 */
	public UcfUserLoginApp queryUserAppInfo(String loginId) throws Exception;

	/**
	 * @Description: 查询个人会员登录信息
	 * @param loginId
	 * @throws Exception
	 * @return UcfUserLoginApp 返回类型
	 * @author gaoxiang
	 * @date 2014-12-19 下午3:44:25
	 */
	public UcfUserLoginApp queryPersonUserAppInfo(String loginId) throws Exception;

	/**
	 * 查询登录信息
	 * 
	 * @param loginApp
	 * @return
	 * @throws Exception
	 */
	public UcfUserLoginApp queryUserLoginApp(UcfUserLoginApp loginApp) throws Exception;

	/**
	 * 
	 * Description: 查询用户信息
	 * 
	 * @Version1.0 2014-4-9 上午11:34:21 by xuhao（xuhao@ucfgroup.com）创建
	 * @param paramString
	 * @return
	 * @throws Exception
	 */
	public UcfUser queryUserInfo(String userId) throws Exception;

	public UcfUser queryUserInfo(String userId, String merchantId) throws Exception;

	public UcfCard queryUcfCardByUserId(String userId, String from) throws Exception;

	/**
	 * 
	 * Description: 根据手机号查询用户信息
	 * 
	 * @Version1.0 2014-3-27 上午10:19:28 by xuhao（xuhao@ucfgroup.com）创建
	 * @param phone
	 * @return
	 * @throws Exception
	 */
	public UcfUser queryUserInfoByPhone(String phone) throws Exception;

	/**
	 * 
	 * Description: 插入银行卡信息
	 * 
	 * @Version1.0 2014-3-27 上午10:19:52 by xuhao（xuhao@ucfgroup.com）创建
	 * @param bankCardInfo
	 * @throws Exception
	 */
	public void insertBankCardInfo(UcfBankCard bankCardInfo) throws Exception;

	/**
	 * 
	 * Description: 插入卡信息
	 * 
	 * @Version1.0 2014-3-27 上午10:20:09 by xuhao（xuhao@ucfgroup.com）创建
	 * @param ucfCardInfo
	 * @throws Exception
	 */
	public void insertCardInfo(UcfCard ucfCardInfo) throws Exception;

	public void insertPersonInfo(UcfPerson person) throws Exception;

	/**
	 * 
	 * Description: 增加用户登录信息
	 * 
	 * @Version1.0 2014-4-9 上午10:31:10 by xuhao（xuhao@ucfgroup.com）创建
	 * @param ucfUserLoginApp
	 * @throws Exception
	 */
	public void insertLoginAppInfo(UcfUserLoginApp ucfUserLoginApp) throws Exception;

	public void insertCustomer(UcfCustomer customer) throws Exception;

	public void insertOrganizational(UcfOrg organizational) throws Exception;

	/**
	 * 
	 * Description: 根据用户手机号查询安全问题
	 * 
	 * @Version1.0 2014-3-27 上午10:20:27 by xuhao（xuhao@ucfgroup.com）创建
	 * @param paramString
	 * @return
	 * @throws Exception
	 */
	public List<UcfQuestion> queryUcfQuestion(String paramString) throws Exception;

	/**
	 * 
	 * Description: 修改安全问题
	 * 
	 * @Version1.0 2014-3-27 上午10:21:44 by xuhao（xuhao@ucfgroup.com）创建
	 * @param ucfQuestion
	 * @throws Exception
	 */
	public void updateUcfQuestion(UcfQuestion ucfQuestion) throws Exception;

	/**
	 * 
	 * Description: 更新用户信息
	 * 
	 * @Version1.0 2014-3-27 上午10:21:19 by xuhao（xuhao@ucfgroup.com）创建
	 * @param ucfUser
	 * @throws Exception
	 */
	public void updateUcfUser(UcfUser ucfUser) throws Exception;

	public void updateUcfCustomer(UcfCustomer customer) throws Exception;

	public void updateUcfUserApp(UcfUserLoginApp userLoginApp) throws Exception;

	public void updateUcfCard(UcfCard ucfCard) throws Exception;

	public void insertUserInfo(UcfUser userInfo) throws Exception;

	public UcfCard queryUcfCardByUserId(String userId) throws Exception;

	/**
	 * 
	 * Description: 查询银行卡信息
	 * 
	 * @Version1.0 2014-3-28 下午6:18:38 by xuhao（xuhao@ucfgroup.com）创建
	 * @param cardNo
	 * @return
	 * @throws Exception
	 */
	public List<UcfBankCard> queryUcfBankCard(UcfBankCard ucfBankCard);

	/**
	 * 
	 * Description: 更新银行卡信息
	 * 
	 * @Version1.0 2014-3-29 上午11:53:47 by xuhao（xuhao@ucfgroup.com）创建
	 * @param ucfBankCard
	 * @throws Exception
	 */
	public void updateBankCard(UcfBankCard ucfBankCard) throws Exception;

	/**
	 * 
	 * Description: 根据userId查询银行卡信息
	 * 
	 * @Version1.0 2014-3-31 上午11:40:54 by xuhao（xuhao@ucfgroup.com）创建
	 * @param userId
	 * @return
	 * @throws Exception
	 */
	public List<UcfBankCard> queryUcfBankCardByUserId(String userId) throws Exception;

	public List<UcfUser> queryUcfUser(UcfUser user) throws Exception;

	public UcfCustomer queryUcfCustomerInfo(UcfCustomer customer) throws Exception;

	public Map<Object, Object> queryUcfUserCell(String userId);

	public Map<Object, Object> queryUcfBankCardInfo(String userId) throws Exception;

	/**
	 * 判断支付密码是否错误5次
	 * 
	 * @param model
	 * @return
	 */
	public boolean checkPWD(Model model, String userId);

	/**
	 * 判断用户是否可以修改密保问题
	 * 
	 * @param userId
	 *            用户ID
	 * @return 是否可以修改
	 */
	public boolean checkQusAndAsw(String userId);

	/**
	 * 设置用户密保问题 输入状态
	 * 
	 * @param status
	 *            状态
	 * @param userId
	 *            用户ID
	 * @return 当前错误次数
	 */
	public int setQusAndAsw(boolean status, String userId);

	/**
	 * 调用账户接口开户 -
	 * 
	 * @param model
	 * @param ucfCard
	 * @return
	 */
	public String createAcccount(Model model, EnumAccountType accountType, UcfCard ucfCard);

	public UcfUser queryUcfUserInfo(UcfUser user) throws Exception;

}