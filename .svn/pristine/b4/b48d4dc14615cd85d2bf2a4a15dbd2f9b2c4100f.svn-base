package com.ucf.customer.dao.impl;

import org.springframework.stereotype.Repository;

import java.util.List;

import com.ucf.customer.pojo.UcfOrg;
import com.ucf.customer.dao.UcfOrgDao;
import com.ucf.customer.dao.base.BaseCustomerDao;

@Repository
public class UcfOrgDaoImpl extends BaseCustomerDao implements UcfOrgDao {

	private static final long serialVersionUID = -1L;

	public void insertUcfOrg(UcfOrg ucfOrg)throws Exception{
		this.insert("com.ucf.customer.UcfOrg.insertUcfOrg", ucfOrg);
	}

	public void updateUcfOrg(UcfOrg ucfOrg)throws Exception{
		this.update("com.ucf.customer.UcfOrg.updateUcfOrg", ucfOrg);
	}

	public void deleteUcfOrg(String id)throws Exception{
		this.delete("com.ucf.customer.UcfOrg.deleteUcfOrg", id);
	}

	public List<UcfOrg> queryUcfOrgListByWhere(UcfOrg ucfOrg)throws Exception{
		return this.queryForList("com.ucf.customer.UcfOrg.queryUcfOrgByWhere", ucfOrg);
	}

	@Override
	public UcfOrg quertUcfById(String id) {
		return this.getOne("com.ucf.customer.UcfOrg.selectByPrimaryKey", id);
	}
	
	@Override
	public UcfOrg quertUcfByUserId(String userid) {
		return this.getOne("com.ucf.customer.UcfOrg.selectByUser", userid);
	}

	@Override
	public List<UcfOrg> listPageUcfOrg(UcfOrg ucfOrg) throws Exception {
		return this.queryForList("com.ucf.customer.UcfOrg.listPageUcfOrg", ucfOrg);
	}

}