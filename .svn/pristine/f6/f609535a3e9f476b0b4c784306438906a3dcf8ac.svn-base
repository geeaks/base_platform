
/**
 * 充值服务
 * @copyright @余超 in 先锋支付公司
 */
package com.ucf.customer.controller;


import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.ucf.platform.framework.core.log.UcfLogger;
import com.ucf.platform.framework.core.log.UcfLoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.ucf.customer.action.BaseAction;
import com.ucf.customer.pojo.UcfBankCard;
import com.ucf.customer.pojo.UcfUser;
import com.ucf.customer.service.LoginService;
import com.ucf.customer.service.TradeService;
import com.ucf.customer.utils.BeanUtilEx;
import com.ucf.customer.utils.BizProduct;
import com.ucf.customer.utils.BusinessType;
import com.ucf.customer.utils.Constants;
import com.ucf.customer.utils.MD5Util;

/**
 * 
*    
* 项目名称：base_platform  <br>
* 类名称：DepositAction      <br>
* 类描述：充值   				  <br>
* 创建人：李文静 				  <br>
* 创建时间：2014-5-14 上午10:24:16  <br>   
* 修改人：李文静 				  <br>
* 修改时间：2014-5-14 上午10:24:16  <br>  	
* 修改备注：   				  <br>
* @version    
*
 */
@Controller
@RequestMapping({ "/recharge" })
public class RechargeController extends BaseAction{
	private static UcfLogger LOGGER = UcfLoggerFactory.getLogger(RechargeController.class);
	@Autowired
	private TradeService tradeService;
	@Autowired
	private LoginService loginService;
	
	
	@RequestMapping({ "/index.htm" })
	public String toRecharge(
			HttpServletRequest request,
			HttpServletResponse response,Model model) throws Exception {
		UcfUser user = loginService.queryUserInfo(getbase_platformAgent(request, response).getId());
		// 判断用户是否绑卡
		UcfBankCard verifyBank = new UcfBankCard();
		verifyBank.setUserId(user.getUserId());
		List<UcfBankCard> list = loginService.queryUcfBankCard(verifyBank);
		if(list==null){
			return "realNameAuth/index";
		}
		if(!"T".equals(user.getRealnameStatus())){
			model.addAttribute("msg", "该用户未通过实名认证,不能进行充值操作");
			model.addAttribute("url", "/user/index.htm");
			return "/common/error";
		}
		String userId = user.getUserId();
		
		String md5sign = "";
		
		String md5Key = Constants.DEPOSITKEY;
		String originalValue= userId+md5Key;
		
		LOGGER.info("deposit original is:" + originalValue);
		
		md5sign = MD5Util.MD5(originalValue);
		LOGGER.info("deposit sign is:" + md5sign);
		
		String host = tradeService.getTradeRechargeUrl();
		
		String url = host+"?businessType="+BusinessType.DEPOSIT.getCode()
				+"&userId="+userId+"&bizProduct="+BizProduct.BIZ_PRODUCT_base_platform.getCode();
		LOGGER.info("url="+url);
		
		//收银柜所需的对象在访问时候放进去，不在登录的时候放进去
		com.ucf.customer.ws.bo.UcfUser ucfUserBo = new com.ucf.customer.ws.bo.UcfUser();
		BeanUtilEx.copyProperties(ucfUserBo,user);
		HttpSession session = request.getSession();
		session.setAttribute("cashUser", ucfUserBo);
		response.sendRedirect(url);		
		return null;
	}

}
