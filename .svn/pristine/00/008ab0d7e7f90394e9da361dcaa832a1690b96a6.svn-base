package com.ucf.customer.utils;

import java.lang.reflect.Field;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ucf.customer.utils.enums.EnumTrueFalse;
import com.ucf.customer.ws.enums.EnumFieldType;
import com.ucf.customer.ws.enums.FieldAccess;
import com.ucf.customer.ws.enums.FieldName;
import com.ucf.onlinepay.framework.common.util.StringUtil;

public class BOCheckUtil {
	private static Logger LOGGER = LoggerFactory.getLogger(BOCheckUtil.class);

	public static String check(Object object) {
		try {
			for (Field field : object.getClass().getDeclaredFields()) {
				FieldAccess fieldAcces = field.getAnnotation(FieldAccess.class);
				if (fieldAcces!= null) {
					for (EnumFieldType t : fieldAcces.value()) {
						if (t == EnumFieldType.NOT_NULL) {
							field.setAccessible(true); // 设置些属性是可以访问的
							Object val = field.get(object);// 得到此属性的值
							if (val==null || StringUtil.isEmpty((String) val)) {
								
								FieldName fieldName = field.getAnnotation(FieldName.class);
								return fieldName==null?field.getName()+"不能为空":fieldName.value()+"不能为空";
							}
						}
					}
				}
				

			}
		} catch (Exception e1) {
			LOGGER.error(e1.getMessage());
		}
		return EnumTrueFalse.TRUE.getCode();
	}

}
