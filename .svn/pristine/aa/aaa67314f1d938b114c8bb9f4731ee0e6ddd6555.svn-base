package com.ucf.customer.ws.bo;

import java.io.Serializable;

/**
 * 
*    
* 项目名称：base_platform-client   
* 类名称：PageBO   
* 类描述：   统一的分页基类
* 创建人：李文静  
* 创建时间：2014-5-20 下午8:07:06   
* 修改人：lenovo   
* 修改时间：2014-5-20 下午8:07:06   
* 修改备注：   
* @version    
*
 */
public class PageBO implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2063902816698308042L;
	
	/**
	 * 返回码
	 */
	private String respCode;

	/**
	 * 返回消息
	 */
	private String respMsg;

	
	/**
	 * 每页记录数
	 */
	private Long pageSize=20L;
	
	
	/**
	 * 当前页
	 */
	private Long currentPage=1L;
	
	
	/**
	 * 上一页
	 */
	private Long lastPage;
	
	/**
	 * 总记录数
	 */
	private Long totalItem;
	
	/**
	 * 总页数
	 */
	private Long totalPage;
	
	/**
	 * 下一页
	 */
	private Long nextPage;
	
	
	
	/**
	 * 当前记录开始条数（rownum ）
	 */
	private Long pageFristItem;
	
	/**
	 * 当前记录结束条数（rownum ）
	 */
	private Long pageLastItem;

	public String getRespCode() {
		return respCode;
	}

	public void setRespCode(String respCode) {
		this.respCode = respCode;
	}

	public String getRespMsg() {
		return respMsg;
	}

	public void setRespMsg(String respMsg) {
		this.respMsg = respMsg;
	}

	public Long getTotalItem() {
		return totalItem;
	}

	public void setTotalItem(Long totalItem) {
		pageFristItem = (currentPage-1) * pageSize;
		pageLastItem = currentPage * pageSize;
		nextPage = currentPage + 1;
		lastPage = currentPage - 1;
		this.totalItem = totalItem;
	}

	public Long getTotalPage() {
		totalPage = totalItem/pageSize;
		if (totalItem%pageSize==0) {
			totalPage = totalItem/pageSize;
		}else {
			totalPage = totalItem/pageSize + 1;
		}
		return totalPage;
	}

	public void setTotalPage(Long totalPage) {
		this.totalPage = totalPage;
	}

	public Long getPageSize() {
		return pageSize;
	}

	public void setPageSize(Long pageSize) {
		this.pageSize = pageSize;
	}

	public Long getCurrentPage() {
		return currentPage;
	}

	public void setCurrentPage(Long currentPage) {
		this.currentPage = currentPage;
	}

	public Long getLastPage() {
		return lastPage;
	}


	public Long getNextPage() {
		
		return nextPage;
	}


	public Long getPageFristItem() {
		
		return pageFristItem;
	}


	public Long getPageLastItem() {
		
		return pageLastItem;
	}

	
	
	

}
