
package com.ucf.customer.interceptor;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Repository;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.ucf.customer.utils.MD5Util;
import com.ucf.customer.utils.exception.TokenException;
/**
 * 
 * Description: 防止表单重复提交
 * All Rights Reserved.
 * @version 1.0  2014-4-29 上午9:33:26  by xuhao（xuhao@ucfgroup.com）创建
 */
@Repository
public class TokenInterceptor extends HandlerInterceptorAdapter {
	
	
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {

		String uri = request.getRequestURI();
		
		String[] token = new String[] {"/member/withdraw","/member/firstaddbank.htm","/member/reg/saveUserinfo.htm"};
		
		String[] tokenValid = new String[] {"/member/withdraw/submit","/member/bank/firstAddBankCardPro.htm","/member/reg/realNameAuth.htm"};
		
		HttpSession session  = request.getSession();
		boolean valid = true;
		for (String s : token) {
			if ((uri).equals(s)) {
				String flag = MD5Util.MD5(s + new Date().getTime()); // 创建一个token的flag
				session.setAttribute("TokenFlag", flag);
				request.setAttribute("token", flag);
				valid = false;
				break;
			}
		}
		if (valid)
		for (String s : tokenValid) {
			if ((uri).equals(s)) {
				Object sessionFlag = session.getAttribute("TokenFlag");
				Object requestFlag = request.getParameter("token");
				if (sessionFlag != null && sessionFlag.equals(requestFlag)) { 
					// 验证结果一致，既为第一次提交，删除会话中存储的token，并继续执行方法。否则不做任何处理。
					session.removeAttribute("TokenFlag");
				} else {
					String backUrl = request.getParameter("backUrl");
					request.setAttribute("backUrl", backUrl);
					request.setAttribute("msg", "重复提交");
					throw new TokenException();
				}
				break;
			}
		}
		return super.preHandle(request, response, handler);
	}

}
