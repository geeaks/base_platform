package com.ucf.customer.dao;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import com.ucf.customer.pojo.UcfUser;
import com.ucf.customer.ws.enums.EnumUserType;

public interface UcfUserDao extends Serializable {

	void insertUcfUser(UcfUser ucfUser)throws Exception;

	void updateUcfUser(UcfUser ucfUser)throws Exception;

	void deleteUcfUser(String userId)throws Exception;
	
	
	UcfUser getUcfUserByUserId(String userId);

	List<UcfUser> queryUcfUserListByWhere(UcfUser ucfUser)throws Exception;
	
	Map<Object, Object>  queryUcfUserCell(String userId)throws Exception;
	//获取企业会员编号
	String getEnterpriseMemberNO_SEQ() throws Exception;
	/**
	 * 用户id生成
	 * @return
	 * @throws Exception 
	 */
	public String  queryUcfUserId() throws Exception;
	/**
	 * 根据类型查询用户
	 * @param userType
	 * @return
	 */
	List<UcfUser> queryUcfUserListByType(EnumUserType userType);
	
	String monitorValidConnent() throws Exception;

	/**
	 * @Description: 查询匿名用户列表
	 * @throws Exception
	 * @return List<UcfUser> 返回类型
	 * @author gaoxiang
	 * @date 2015-1-12 下午1:03:47
	 */
	List<UcfUser> findAnonymousUser() throws Exception;

	/**
	 * @Description: 刷新指定用户的缓存
	 * @param userId 用户主键
	 * @param timeout 超时时间
	 * @throws Exception
	 * @return void 返回类型
	 * @author gaoxiang
	 * @date 2015-4-16 上午11:18:22
	 */
	void refreshUserInfo(String userId,int timeout) throws Exception;

	/**
	 * @Description: 分页查询用户信息
	 * @param user
	 * @throws Exception
	 * @return List<UcfUser> 返回类型
	 * @author gaoxiang
	 * @date 2015-4-8 下午6:43:51
	 */
	List<UcfUser> listPageUcfUser(UcfUser user) throws Exception;


}