package com.ucf.customer.interceptor;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
import com.alibaba.dubbo.common.utils.StringUtils;
import com.ucf.onlinepay.framework.common.util.StringUtil;

/**
 * @Description: 请求URL的引用拦截器
 * @ClassName: RefererIntereptor
 * @author gaoxiang
 * @date 2014-12-16 上午9:34:05
 */ 
public class RefererIntereptor extends HandlerInterceptorAdapter {
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
		String requestType = request.getHeader("X-Requested-With");
		if(StringUtils.isNotEmpty(requestType) && "XMLHttpRequest".equals(requestType)){
			return true;
		}
		//不拦截静态资源 
		String basePath = request.getServerName();
		Pattern pattern = Pattern.compile("^[\\d]{1,3}\\.[\\d]{1,3}\\.[\\d]{1,3}\\.[\\d]{1,3}$");
		Matcher matcher = pattern.matcher(basePath);
		boolean flag = matcher.matches();
		if(flag){
			return true;
		}
		//来源
		String referer = request.getHeader("referer");
		referer = StringUtil.isEmpty(referer)?"":referer;
		//去掉uri中的queryString
		int index = referer.indexOf('?');
		if(index!=-1){
			referer = referer.substring(0,index);
		}
		//如果引用非ucfpay.com 直接跳转到首页
		if(StringUtils.isNotEmpty(referer) && !checkRedirectUrl(referer)){
			response.sendRedirect(request.getContextPath());
			return false;
		}
		return true;
	}
	
	private boolean checkRedirectUrl(String redirectUrl){
		Pattern pattern = Pattern.compile("^https?:\\/\\/[A-Za-z0-9]*\\.ucfpay\\.com[:\\d]?[\\/\\w\\d]*\\.?[\\w\\d]*");
		Matcher matcher = pattern.matcher(redirectUrl);
		return matcher.matches();
	}
	
}
