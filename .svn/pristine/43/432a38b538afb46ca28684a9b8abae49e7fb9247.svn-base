<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-lazy-init="false">

	<aop:aspectj-autoproxy />

	<util:properties id="settings" location="classpath:/app.properties" />

	<!-- bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>classpath*:/app.properties</value> 
		</list> </property> <property name="ignoreUnresolvablePlaceholders" value="true" 
		/> </bean -->
	<!-- Added by zhangrui -->
	<bean id="propertyConfigurer"
		class="com.ucf.platform.framework.core.property.CustomerPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/app.properties</value>
			</list>
		</property>
	</bean>

	<bean id="tradeService" class="com.ucf.customer.service.impl.TradeServiceImpl">
		<property name="tradeRechargeUrl" value="${com.ucf.trade.recharge.uri}" />
		<property name="unioLoginUrl" value="${com.ucf.member.uniologin.host}" />
	</bean>

	<bean id="customerServiceImpl" class="com.ucf.customer.service.impl.CustomerServiceImpl">
		<property name="customerRegUrl" value="${com.ucf.member.url}${com.ucf.customer.uri}" />
	</bean>

	<bean id="protectionSystemServiceImpl"
		class="com.ucf.customer.service.impl.ProtectionSystemServiceImpl">
		<property name="protectionIp" value="${protection.system.host.ip}" />
		<property name="protectionPort" value="${protection.system.host.port}" />
	</bean>

	<!-- 配置数据源 Add by WangXinghao -->
	<bean id="dataSource_customer" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${oracle.jdbc.url}" />
		<property name="username" value="${oracle.jdbc.username}" />
		<property name="password" value="${oracle.jdbc.password}" />
		<property name="driverClassName" value="${oracle.jdbc.driver}" />
		<property name="maxWait" value="${oracle.jdbc.maxWait}" />
		<property name="maxActive" value="${oracle.jdbc.maxActive}" />
		<property name="initialSize" value="${oracle.jdbc.initialSize}" />
		<property name="minIdle" value="${oracle.jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${oracle.jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${oracle.jdbc.minEvictableIdleTimeMillis}" />
		<property name="removeAbandonedTimeout" value="${oracle.jdbc.removeAbandonedTimeout}" />
	</bean>



	<!-- Mybatis配置Add by WangXinghao -->
	<bean id="sqlSessionFactory_customer" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_customer" />
		<!-- <property name="typeAliasesPackage" value="com.ucfpay.onlinepay.demo.vo" 
			/> -->
		<property name="configLocation" value="classpath:/mybatis/mybatis_config.xml" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*_sql.xml" />
	</bean>

	<!-- 配置sqlSessionTemplate Add by WangXinghao -->
	<bean id="sqlSessionTemplate_customer" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory_customer" />
	</bean>

	<bean id="redisUtils" class="com.ucf.customer.utils.RedisUtils"
		init-method="init" lazy-init="false">
		<property name="poolHost" value="${redis.pool.host}" />
		<property name="poolPort" value="${redis.pool.port}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<property name="encode" value="${redis.encode}" />
		<property name="expire" value="${redis.expire}" />
		<property name="unlock" value="${redis.unlock}" />
	</bean>

	<!-- 自动扫描注解的形式service+dao -->
	<context:annotation-config />

	<context:component-scan base-package="com.ucf.customer">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置事务管理 Add by WangXinghao -->
	<bean id="transactionManagerMyBatis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_customer" />
	</bean>

	<bean id="sharedTransactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManagerMyBatis"></property>
	</bean>

	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="" />
			<mvc:exclude-mapping path="/login/index.htm" />
			<mvc:exclude-mapping path="/idcode.do" />
			<!-- P2P个人商户注册 -->
			<mvc:exclude-mapping path="/openAccount/**" />
			<!-- p2p、碧天联创找回支付密码 -->
			<mvc:exclude-mapping path="/p2p/**" />
			<!-- 基金支付开户 -->
			<mvc:exclude-mapping path="/fund/**" />
			<bean class="com.ucf.customer.interceptor.RefererIntereptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.ucf.customer.interceptor.LoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/p2p/**" />
			<bean class="com.ucf.customer.interceptor.CheckPasswordInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/p2p/**" />
			<mvc:mapping path="/openAccount/**" />
			<mvc:mapping path="/withdraw/**" />
			<mvc:mapping path="/" />
			<mvc:mapping path="/valiPwd/**" />
			<mvc:mapping path="/login/**" />
			<mvc:mapping path="/cashier/**" />
			<!-- <mvc:mapping path="/bank/firstAddBankCardPro.htm"/> -->
			<mvc:mapping path="/bank/**" />
			<mvc:mapping path="/pwd/**" />
			<bean class="com.ucf.customer.interceptor.ProtectionSystemInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/member/withdraw" />
			<mvc:mapping path="/member/bank/firstaddbank.htm" />
			<mvc:mapping path="/member/bank/firstAddBankCardPro.htm" />
			<bean class="com.ucf.customer.interceptor.TokenInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 总错误处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.ucf.customer.utils.exception.P2PCustomerException">p2p/err</prop>
				<!-- <prop key="com.alibaba.dubbo.rpc.RpcException">p2p/err</prop> -->
				<prop key="java.lang.Exception">common/error</prop>
				<prop key="java.lang.Throwable">common/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="common/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	
	<import resource="dubbo-context.xml" />
	<import resource="ucf-framework-conf.xml" />
	<import resource="rocketmq-context.xml" />
	<import resource="classpath:/bean/framework-jedis-bean.xml"/>
	<import resource="classpath:/bean/framework-lock-jedis-bean.xml"/>
	<import resource="classpath:/bean/framework-web-session-bean.xml"/>
	<import resource="classpath:/schedule-base-bean.xml" />
	
	<!-- 定时自动任务 -->
	<bean id="autoRefreshUserCache" class="com.ucf.customer.task.AutoRefreshUserCache">
		<property name="version" value="2.0" />
	</bean>
	<bean class="com.ucf.schedule.service.ScheduleClient" init-method="init">
		<!-- 任务分组，不同的应用 值不相同 -->
		<property name="group" value="MEMBER"></property>
		<property name="tasks">
			<list>
				<!-- 任务Bean -->
				<ref bean="autoRefreshUserCache" />
			</list>
		</property>
	</bean>


</beans>
