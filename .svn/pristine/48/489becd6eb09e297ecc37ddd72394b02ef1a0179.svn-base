﻿﻿﻿<%@ page language="java" import="java.util.*" pageEncoding="UTF-8" contentType="text/html; charset=utf-8"%>
<%
 response.setHeader("Pragma","No-cache");
 response.setHeader("Cache-Control","no-cache");
 response.setDateHeader("Expires",0);
 %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>先锋支付--用户注册</title>
<jsp:include page="/WEB-INF/views/jsp/common/oldcommon.jsp"/>
<link href="${staticMemberPath}/css/bootstrap.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="${staticMemberPath}/new/css/host_findpassword.css"/>
<link href="${staticMemberPath}/new/css/person_login.css" rel="stylesheet" type="text/css" />
<link href="${staticMemberPath}/new/css/frist-register.css" rel="stylesheet" type="text/css" />
<link href="${staticMemberPath}/css/ucfgroup-nicevalidator-extends.css" rel="stylesheet" />
<style>
#vfyCode>div.help-block{
	left:200px;
}
</style>
</head>
<body>
	<c:import url="/WEB-INF/views/jsp/common/headforregister.jsp"></c:import>
    <section class="bgc-gray">
      <div class="gs-center register">
         <img src="${staticMemberPath}/images/szsf.png">
            <div class="tab-content help-tab-content border-none">
              <div class="tab-pane active">
					<div class="background-wite">
                        <form class="pers-inf" style="padding-top:30px; width:80%;margin:0 auto;" action="${basePath}/reg/saveUserinfo.htm" id="userInfoForm" name="userInfoForm" method="post" data-validator-option="{theme:'ucfgroup_effect',timely:2}">
                            <p><label for="name">用户名称 :</label> ${ssid} </p>
                            <p><label for="name">真实姓名 :</label>
                                <input type="text" id="realName" name="realName" tabindex="1" data-tip="请输入您的真实姓名"/>
                            </p>
                            <p><label for="name">验证码 :</label>
			                	<input class="w105" type="text" id="vfyCode" name="vfyCode"  maxlength="6" tabindex="1" />
			                	<input name="validPhoneCode" id="validPhoneCode" style="width:105px; font-size: 12px; padding-left:0px; margin-left:5px;" type="button" onclick="sendSMSReg();"  value="获取验证码" />
		                	</p>
                            <div class="zc-line"></div>
                            <p class="red"><label for="name">登录密码</label></p>
                            <p><label for="name">设置登录密码 :</label>
                               <input type="password" id="lgnPwd" name="lgnPwd" tabindex="1" data-tip="6-20位字符，须包含：大写字母、小写字母、数字、符号至少两种"/></p>
                            <p><label for="name">确认登录密码 :</label>
                                <input type="password" id="repeatlgnPwd" name="repeatlgnPwd" tabindex="1" data-tip="必须与上面保持一致"/></p>
                            <div class="zc-line"></div>
                            <p class="red"><label for="name">支付密码</label></p>
                            <p><label for="name">设置支付密码 :</label>
                                <input type="password" id="paymentPassword" name="paymentPassword" tabindex="1" data-tip="6-20位字符，须包含：大写字母、小写字母、数字、符号至少两种"/></p>
                            <p><label for="name">确认支付密码 :</label>
                                <input type="password" id="repeatpaymentPassword" name="repeatpaymentPassword" tabindex="1" data-tip="必须与上面保持一致"/></p>
                            <div class="zc-line"></div>
                            
                            <p class="red"><label for="name">设置身份信息</label></p>
                            <p><label for="name">身份证号 :</label>
                                <input type="text" id="certNo" name="certNo" tabindex="1" data-tip="请输入18位身份证号"/></p>
                            <p><label for="name">身份有效期 :</label>
                            	<select style="width:105px;height:40px;" id="certEffectiveYear" name="certEffectiveYear" class="h_open_sel">
                                  <option value="" >选择</option>
                                </select> / 
								<select style="width:105px;height:40px;" id="certEffectiveMonth" name="certEffectiveMonth" class="h_open_sel">
                                 	<option value="">选择</option>
                                </select>
                            </p>
                            <div class="zc-line"></div>
                            
                            <p class="red"><label for="name">安全保护问题</label></p>
                            <p><label for="name">安全保护问题 :</label>
                            	<select name="quesInfo" class="h_open_sel" style="width:220px;height:40px" >
							   		 <option value="">请选择密保问题</option>
				                     <option value="1">1.我的宠物是</option>
				                     <option value="2">2.我的老公或妻子出生地是</option>
				                     <option value="3">3.我的老公或妻子生日是</option>
				                     <option value="4">4.我的小学校名是</option>
				                 </select> 
                            </p>
                            <p><label for="name">安全保护答案 :</label>
                                <input type="text" id="quesRes" name="quesRes" class="idbox w228" data-tip="请输入安全保护答案" maxlength="20"/>
                            </p>
                            <div class="zc-line"></div>
                            <a class="btn mt20 mgl113" onclick="subForm();">下一步</a>
                        </form>
                    </div>
              </div>
             
     </div>
	 </section>
     <c:import url="/WEB-INF/views/jsp/common/newfooter.jsp"></c:import>
</body>
<script type="text/javascript">
function subForm(){
	$("#userInfoForm").submit();
}
function sendSMSReg(){
	sendSMSNew('',0);
};
$(document).ready(function() {
	$('#userInfoForm').validator({
		stopOnError: false,
		 timely: true,
		 rules: {
			 tel: [/^1\d{10}$/, '请输入正确的手机号'],
			 realNameReq: function(element, params){
				 if("请输入真实姓名"==element.value)
				 return '不能为空';
				 return true;
			 },
			 cardNo: function(element, params){
				//内部的this指向的是当前实例，可以直接调用所有方法，这里调用了test方法
				return idCardValidate() ||	'身份证号输入错误';
			 },pwdCheck: function(element) {
				 return (!(/^[A-Za-z]*$/.test(element.value)) && !(/^[0-9]*$/.test(element.value)) 
						&& /^[A-Za-z0-9]*$/.test(element.value)) || '密码不符合要求';
			 },dateRequired: function(element, params){
				 var y = $("#certEffectiveYear ").val();
				 if(y==null || y==''){
					 return '请选择有效期';
				 }
				 var m = $("#certEffectiveMonth ").val();
				 if(m==null || m==''){
					 return '请选择有效期';
				 }
				 return true;
			 },pwdMath:function(){
				 var lgnPwd = $("#lgnPwd").val();
				 var paymentPassword=$("#paymentPassword").val();
				 if(lgnPwd==paymentPassword){
					 return '登录密码不可与支付密码相同';
				 }
				 return true;
			 },nameCheck: function(element) {
				 var reg = /[!@#$%^&*\(\)\-\+\=\_~\|,\?\{\}\[\].]+/;
				 if (reg.test(element.value)){
					 return '名字不可包含特殊字符';
				 }
				 /* element.value.replace(/\s+/,''); */
				obj= element.value.replace(/\s+/g,"");
				$("#realName").val(obj);
				 return ((/^(?:[\u4E00-\u9FFF]{1,8}·\u4E00-\u9FFF]{1,8})|(?:[\u4E00-\u9FFF]{2,5})$/.test(element.value)) 
						 || /^([A-Za-z]+\s?)*[A-Za-z]$/.test(element.value)	
						 || /^(?:[\u4E00-\u9FFF]{1,8}·\u4E00-\u9FFF]{1,8})|(?:[\u4E00-\u9FFF]{2,5})|([A-Za-z]+\s?)*[A-Za-z]$/.test(element.value)  ) || '名字不符合要求';
				 },
				 quesReq: function(element, params){
					 if("请输入答案"==element.value)
					 return '不能为空';
					 return true;
				 }
		},
		fields: {
		   'lgnPwd':'required;length[6~20];pwdCheck;',
		   'repeatlgnPwd':{
			   rule: "required;match(lgnPwd)",
			   msg: {match: "请确保两次输入登录密码相同!"}
			},
		   'paymentPassword':'required;length[6~20];pwdCheck;pwdMath;',
		   'repeatpaymentPassword':{
			   rule: "required;match(paymentPassword)",
			   msg: {match: "请确保两次输入支付密码相同!"}
			},
		   'realName':'required;realNameReq;nameCheck;',
		    'certNo':'required(not,"请输入18位身份证号");length[18];cardNo;',
		   'quesInfo':{
			   rule: "required(not,'请输入答案')",
			   msg: {required: "请选择密保问题!"}
			},
			'certEffectiveMonth':{
				   rule: "required;dateRequired;",
				   msg: {required: "请选择有效期!"}
			},
		    'quesRes':'required;quesReq;',
		    'vfyCode':'required;'
		}
	});
});
$('#vfyCode').keyup(function(){
	var v = $(this).val();
	if(v!=null && v.length==6){
		$(this).trigger("validate");
	}
});

/**  
 * 身份证15位编码规则：dddddd yymmdd xx p   
 * dddddd：地区码   
 * yymmdd: 出生年月日   
 * xx: 顺序类编码，无法确定   
 * p: 性别，奇数为男，偶数为女  
 * <p />  
 * 身份证18位编码规则：dddddd yyyymmdd xxx y   
 * dddddd：地区码   
 * yyyymmdd: 出生年月日   
 * xxx:顺序类编码，无法确定，奇数为男，偶数为女   
 * y: 验证码，该位数值可通过前17位计算获得  
 * <p />  
 * 18位号码加权因子为(从右到左) Wi = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2,1 ]  
 * 验证位 Y = [ 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 ]   
 * 校验位计算公式：Y_P = mod( ∑(Ai×Wi),11 )   
 * i为身份证号码从右往左数的 2...18 位; Y_P为脚丫验证码所在验证码数组位置  
 *   
 */  
  
var Wi = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1 ];// 加权因子   
var ValideCode = [ 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 ];// 身份证验证位值.10代表X   
function idCardValidate() {   
    var idCard = document.getElementById("certNo").value;
    idCard = trim(idCard.replace(/ /g, ""));   
    if (idCard.length == 15) {   
        return isValidityBrithBy15IdCard(idCard);   
    } else if (idCard.length == 18) {   
        var a_idCard = idCard.split("");// 得到身份证数组  
        if(isValidityBrithBy18IdCard(idCard)&&isTrueValidateCodeBy18IdCard(a_idCard)){   
            return true;   
        }else {   
            return false;   
        }   
    } else {   
        return false;   
    }   
}   
/**  
 * 判断身份证号码为18位时最后的验证位是否正确  
 * @param a_idCard 身份证号码数组  
 * @return  
 */  
function isTrueValidateCodeBy18IdCard(a_idCard) {   
    var sum = 0; // 声明加权求和变量   
    if (a_idCard[17].toLowerCase() == 'x') {   
        a_idCard[17] = 10;// 将最后位为x的验证码替换为10方便后续操作   
    }   
    for ( var i = 0; i < 17; i++) {   
        sum += Wi[i] * a_idCard[i];// 加权求和   
    }   
    valCodePosition = sum % 11;// 得到验证码所位置   
    if (a_idCard[17] == ValideCode[valCodePosition]) { 
        return true;   
    } else {  
        return false;   
    }   
}   
/**  
 * 通过身份证判断是男是女  
 * @param idCard 15/18位身份证号码   
 * @return 'female'-女、'male'-男  
 */  
function maleOrFemalByIdCard(idCard){   
    idCard = trim(idCard.replace(/ /g, ""));// 对身份证号码做处理。包括字符间有空格。   
    if(idCard.length==15){   
        if(idCard.substring(14,15)%2==0){   
            return 'female';   
        }else{   
            return 'male';   
        }   
    }else if(idCard.length ==18){   
        if(idCard.substring(14,17)%2==0){   
            return 'female';   
        }else{   
            return 'male';   
        }   
    }else{   
        return null;   
    }   

}   
 /**  
  * 验证18位数身份证号码中的生日是否是有效生日  
  * @param idCard 18位书身份证字符串  
  * @return  
  */  
function isValidityBrithBy18IdCard(idCard18){   
    var year =  idCard18.substring(6,10);   
    var month = idCard18.substring(10,12);   
    var day = idCard18.substring(12,14);   
    var temp_date = new Date(year,parseFloat(month)-1,parseFloat(day));   
    // 这里用getFullYear()获取年份，避免千年虫问题   
    if(temp_date.getFullYear()!=parseFloat(year)   
          ||temp_date.getMonth()!=parseFloat(month)-1   
          ||temp_date.getDate()!=parseFloat(day)){ 
            return false;   
    }else{  
        return true;   
    }   
}   
  /**  
   * 验证15位数身份证号码中的生日是否是有效生日  
   * @param idCard15 15位书身份证字符串  
   * @return  
   */  
  function isValidityBrithBy15IdCard(idCard15){   
      var year =  idCard15.substring(6,8);   
      var month = idCard15.substring(8,10);   
      var day = idCard15.substring(10,12);   
      var temp_date = new Date(year,parseFloat(month)-1,parseFloat(day));   
      // 对于老身份证中的你年龄则不需考虑千年虫问题而使用getYear()方法   
      if(temp_date.getYear()!=parseFloat(year)   
              ||temp_date.getMonth()!=parseFloat(month)-1   
              ||temp_date.getDate()!=parseFloat(day)){   
                return false;   
        }else{   
            return true;   
        }   
  }   
	//去掉字符串头尾空格   
	function trim(str) {   
	    return str.replace(/(^\s*)|(\s*$)/g, "");   
	}
</script>
	<script type="text/javascript">
	$().ready(function(){
		var myDate = new Date();
		var year = myDate.getFullYear();    //获取完整的年份(4位,1970-????)
		var month = myDate.getMonth();       //获取当前月份(0-11,0代表1月)
		for (var i=0;i<20;i++) {
			if(i==0){
				$("#certEffectiveYear").append("<option value='"+(myDate.getFullYear()*1+i)+"' selected>"+(myDate.getFullYear()*1+i)+"年</option>");

			}else{
				$("#certEffectiveYear").append("<option value='"+(myDate.getFullYear()*1+i)+"'>"+(myDate.getFullYear()*1+i)+"年</option>");
			}
		}
		for (var i=0;i<12;i++) {
			if(month==i){
				$("#certEffectiveMonth").append("<option  value='"+(1+i)+"' selected>"+(1+i)+"月</option>");
			}else{
			    $("#certEffectiveMonth").append("<option  value='"+(1+i)+"'>"+(1+i)+"月</option>");
			}
		}
	});
		
</script>
<script src="${staticMemberPath}/js/jquery.validator.js" type="text/javascript"></script>
<script src="${staticMemberPath}/js/zh_CN.js" type="text/javascript"></script>
<script src="${staticMemberPath}/js/ucfgroup-nicevalidator-extends.js" type="text/javascript"></script>
</html>