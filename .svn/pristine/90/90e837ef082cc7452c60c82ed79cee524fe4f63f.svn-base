package com.ucf.customer.ws.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.ucf.customer.pojo.UcfBankCard;
import com.ucf.customer.service.LoginService;
import com.ucf.customer.utils.BeanUtilEx;
import com.ucf.customer.ws.bo.WebServiceParamBO;
import com.ucf.customer.ws.bo.WebServiceReturnValueBO;
import com.ucf.customer.ws.service.QueryBankCards;
import com.ucf.platform.framework.core.log.UcfLogger;
import com.ucf.platform.framework.core.log.UcfLoggerFactory;
import com.ucf.platform.framework.log.LoggerLevel;
import com.ucf.platform.framework.log.annotation.DigestLogAnnotated;
@SuppressWarnings("unchecked")

public class QueryBankCardsImpl implements QueryBankCards{
	private static final UcfLogger LOGGER = UcfLoggerFactory.getLogger(QueryBankCardsImpl.class);
	@Autowired
	private LoginService loginService;

	@SuppressWarnings("rawtypes")
	@Override
	@DigestLogAnnotated(digestIdentificationCode = "1006",
	logFileName = "DEFAULT.DIG",
    loggerLevel = LoggerLevel.INFO)
	public WebServiceReturnValueBO queryBankCards(
			WebServiceParamBO webServiceParamBO) {
		String userId=webServiceParamBO.getUserId();
		String bankCardId = webServiceParamBO.getId();
		UcfBankCard  bankCard=new UcfBankCard();
		if(StringUtils.isNotEmpty(bankCardId)){
			bankCard.setId(bankCardId);
		}
		List<UcfBankCard> list = new ArrayList<UcfBankCard>();
		WebServiceReturnValueBO bo=new WebServiceReturnValueBO();
		
		
		
		Map map=new HashMap();
		bankCard.setUserId(userId);
		bankCard.setCardType(webServiceParamBO.getType());
		try {
			list=loginService.queryUcfBankCard(bankCard);
		
		if(list!=null && list.size()>0){
			
			
			
			//pojo 转换
			List<com.ucf.customer.ws.bo.UcfBankCard> tempBankCards = new ArrayList<com.ucf.customer.ws.bo.UcfBankCard>();
			for (UcfBankCard ucfBankCard : list) {
				com.ucf.customer.ws.bo.UcfBankCard temBankCard = new com.ucf.customer.ws.bo.UcfBankCard();
				BeanUtilEx.copyProperties(temBankCard, ucfBankCard);
				tempBankCards.add(temBankCard);
			}
			
			map.put("result", "1");
			bo.setReturnBankCards(tempBankCards);
			bo.setReturnValueMap(map);
			
		}else{
			map.put("result", "0");
			map.put("message","该用户卡列表为空!" );
			bo.setReturnValueMap(map);
		}} catch (Exception e) {
			LOGGER.debug("e:"+e.getMessage());
			LOGGER.error(e.getMessage(),e);
		}
		
		return bo;
	}

}
