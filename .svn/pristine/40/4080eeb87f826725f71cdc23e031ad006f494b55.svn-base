package com.ucf.customer.ws.service.impl;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.alibaba.fastjson.JSON;
import com.ucf.customer.pojo.UcfUser;
import com.ucf.customer.service.LoginService;
import com.ucf.customer.service.TradeService;
import com.ucf.customer.utils.BeanUtilEx;
import com.ucf.customer.ws.bo.WebServiceParamBO;
import com.ucf.customer.ws.bo.WebServiceReturnValueBO;
import com.ucf.customer.ws.service.SearchTransactionWS;
import com.ucf.platform.framework.core.log.UcfLogger;
import com.ucf.platform.framework.core.log.UcfLoggerFactory;
import com.ucf.platform.framework.log.LoggerLevel;
import com.ucf.platform.framework.log.annotation.DigestLogAnnotated;

public class SearchTransactionWSImpl implements SearchTransactionWS{
	private static final UcfLogger LOGGER = UcfLoggerFactory.getLogger(SearchTransactionWSImpl.class);
	@Autowired
	private LoginService loginService;
	@Autowired
	private TradeService tradeService;
	
	@Override
	@DigestLogAnnotated(digestIdentificationCode = "1006",
	logFileName = "DEFAULT.DIG",
	loggerLevel = LoggerLevel.INFO)
	public WebServiceReturnValueBO searchTransaction(WebServiceParamBO webServiceParamBO) {
		return null;
	}
	
	/**
	 * 调用金融网关查询卡BIN信息
	 */
	public WebServiceReturnValueBO authRealNamePre(WebServiceParamBO webServiceParamBO) {
		return null;
	}

	/**
	 * 调用金融网关进行代扣
	 */
	public WebServiceReturnValueBO authRealNamePro(WebServiceParamBO webServiceParamBO) {
		return null;
	}

	public WebServiceReturnValueBO freezeUser(WebServiceParamBO webServiceParamBO) {
		WebServiceReturnValueBO bo = new WebServiceReturnValueBO();
		Map<Object, Object> retMap = new HashMap<Object, Object>();
		bo.setReturnValueMap(retMap);
		retMap.put("result", "1");
		retMap.put("message", "冻结用户失败");
		UcfUser ucfUser = new UcfUser();
		ucfUser.setUserId(webServiceParamBO.getUserId());
		ucfUser.setFrozenState("1");
		//TODO
		try {
			loginService.updateUcfUser(ucfUser);
			retMap.put("result", "0");
			retMap.remove("message");
		} catch (Exception e) {
			LOGGER.error("from  SearchTransactionWSImpl:"+e.getMessage());
		}
		return bo;
	}
	public WebServiceReturnValueBO queryUserInfo(String userId) {
		WebServiceReturnValueBO bo = new WebServiceReturnValueBO();
		Map<Object, Object> retMap = new HashMap<Object, Object>();
		bo.setReturnValueMap(retMap);
		retMap.put("result", "1");
		retMap.put("message", "冻结用户失败");
		try {
			UcfUser user = loginService.queryUserInfo(userId);
			retMap.put("result", "0");
			retMap.remove("message");
			//pojo转换
			com.ucf.customer.ws.bo.UcfUser ucfUserbo = new com.ucf.customer.ws.bo.UcfUser();
			BeanUtilEx.copyProperties(ucfUserbo, user);
			retMap.put("user", JSON.toJSONString(ucfUserbo));
		} catch (Exception e) {
			LOGGER.error("from  SearchTransactionWSImpl:"+e.getMessage());
		}//TODO
		return bo;
	}
	
}
