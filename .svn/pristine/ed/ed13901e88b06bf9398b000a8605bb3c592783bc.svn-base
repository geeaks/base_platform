package com.ucf.customer.test;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.junit.runner.RunWith;
import org.springframework.mock.web.MockServletContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.XmlWebApplicationContext;
import org.springframework.web.servlet.HandlerAdapter;
import org.springframework.web.servlet.HandlerExecutionChain;
import org.springframework.web.servlet.HandlerMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;
import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:/spring/applicationContext.xml",
		"classpath*:/spring-mvc.xml"})
public class BaseTest extends AbstractTransactionalJUnit4SpringContextTests {
     
	private static HandlerMapping handlerMapping;
	private static HandlerAdapter handlerAdapter;
 
//	{ 
//
//		String[] configs = { "classpath:/spring/applicationContext.xml","classpath*:/spring-mvc.xml","classpath*:/com/ucf/framework/rocketmq/config/spring/framework-rocketmq-context.xml" };
//		XmlWebApplicationContext context = new XmlWebApplicationContext();
//		context.setConfigLocations(configs);
//		MockServletContext msc = new MockServletContext();
//		context.setServletContext(msc);
//		context.refresh();
//		msc.setAttribute(
//				WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,
//				context);
//		handlerMapping = (HandlerMapping) context
//				.getBean(RequestMappingHandlerMapping.class);
//		handlerAdapter = (HandlerAdapter) context.getBean(context
//				.getBeanNamesForType(RequestMappingHandlerAdapter.class)[0]);
//	}

//		String[] configs = { "classpath:/spring/applicationContext.xml","classpath*:/spring-mvc.xml","classpath*:/com/ucf/framework/rocketmq/config/spring/framework-rocketmq-context.xml" };
//		XmlWebApplicationContext context = new XmlWebApplicationContext();
//		context.setConfigLocations(configs);
//		MockServletContext msc = new MockServletContext();
//		context.setServletContext(msc);
//		context.refresh();
//		msc.setAttribute(
//				WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,
//				context);
//		handlerMapping = (HandlerMapping) context
//				.getBean(RequestMappingHandlerMapping.class);
//		handlerAdapter = (HandlerAdapter) context.getBean(context
//				.getBeanNamesForType(RequestMappingHandlerAdapter.class)[0]);
//	}

	/**
	 * 执行request对象请求的action
	 * 
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ModelAndView excuteAction(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HandlerExecutionChain chain = handlerMapping.getHandler(request);
		final ModelAndView model = handlerAdapter.handle(request, response,
				chain.getHandler());
		return model;
	}
}
